#!/bin/sh -e

# import the Parrot test settings too, since we're likely to be needing them.
# but do it first so the Rakudo ones take precedence
[ -r ~/.parrot-smoker.conf ] && . ~/.parrot-smoker.conf
[ -r ~/.rakudo-smoker.conf ] && . ~/.rakudo-smoker.conf

# set defaults
: ${PARROT_REPOSITORY:=~/.smokers/parrot}
: ${RAKUDO_REPOSITORY:=~/.smokers/rakudo}
: ${SPECTEST_REPOSITORY:=~/.smokers/p6-spectest}
: ${TEST_JOBS:=2}
: ${MAKE_JOBS:=6}
: ${HARNESS_VERBOSE:=-2}

export SMOLDER_SUBMITTER TEST_JOBS HARNESS_VERBOSE

MAKE_OPTS="-j${MAKE_JOBS}"

# create new clones if they don't exist already
if ! [ -d "$RAKUDO_REPOSITORY" ]
then
  git clone git://github.com/rakudo/rakudo.git $RAKUDO_REPOSITORY
fi
if ! [ -d "$PARROT_REPOSITORY" ]
then
  git clone git://github.com/parrot/parrot.git $PARROT_REPOSITORY
fi
if ! [ -d "$SPECTEST_REPOSITORY" ]
then
  git clone git://github.com/perl6/roast.git $SPECTEST_REPOSITORY
fi


# the branch to test
BRANCH='origin/master'

cd $RAKUDO_REPOSITORY
old_head=`git rev-parse $BRANCH`
git pull -q
new_head=`git rev-parse $BRANCH`

# nothing to do...
#[ -n "$old_head" -a "$old_head" = "$new_head" ] && exit;

# only test if one or more files matching this pattern have been modified
# FIXME: check there aren't any more
FILE_PATTERN='\.(pm|[chtly]|in|ops|pir|pmc|tg)$'

if true #git diff --name-only "$old_head..$new_head" | grep -qE $FILE_PATTERN
then
  RAKUDO_SMOKE_DIR=`mktemp -d`
  [ -n "$RAKUDO_SMOKE_DIR" ] || exit;

  cd $RAKUDO_SMOKE_DIR
  git clone $RAKUDO_REPOSITORY .

  # also need to clone the spectests (after checking they're up to date)
  (cd $SPECTEST_REPOSITORY; git pull -q)
  git clone $SPECTEST_REPOSITORY t/spec

  # need to make sure we've got a build of a sufficiently recent version of
  # parrot first.  create a temp directory, build parrot there, and the
  # install into an appropriate place.
  PARROT_REVISION_HASH=$(git hash-object build/PARROT_REVISION)
  PARROT_DIR="$(dirname $RAKUDO_REPOSITORY)/rakudo-parrot-$PARROT_REVISION_HASH"
  PARROT_CONFIG_BIN="$PARROT_DIR/bin/parrot_config"

  # either hasn't been built yet, or the minimum Parrot version has been
  # changed.
  if ! [ -d "$PARROT_DIR" -a -e "$PARROT_CONFIG_BIN" ]
  then (
    mkdir -p $PARROT_DIR
    cd $PARROT_REPOSITORY

    git pull -q

    PARROT_BUILD_DIR=`mktemp -d`
    [ -n "$PARROT_BUILD_DIR" ] || exit;

    git clone $PARROT_REPOSITORY $PARROT_BUILD_DIR

    cd $PARROT_BUILD_DIR

    perl Configure.pl --silent --prefix=$PARROT_DIR
    make --silent $MAKE_OPTS
    make --silent test
    make install

    rm -rf $PARROT_BUILD_DIR
  )
  fi

  if ! [ -d "$PARROT_DIR" -a -e "$PARROT_CONFIG_BIN" ]
  then
    echo "Still no Parrot built (should be in ${PARROT_DIR}).  Bailing"
    exit
  fi

  perl Configure.pl --parrot-config="$PARROT_DIR/bin/parrot_config"
  make --silent $MAKE_OPTS
  make --silent $MAKE_OPTS spectest_smolder

  rm -rf $RAKUDO_SMOKE_DIR
fi

exit

: <<"POD"

=head1 parrot

Smoker script for Rakudo Perl 6.

=head1 Configuration

The defaults should be more or less sane.  If you want to override any of them
create a file called C<.rakudo-config.conf> in the root of your home directory
and put your custom settings there.  It should just be a normal shell script.
eg.

  PARROT_REPOSITORY=~/projects/parrot
  TEST_JOBS=2

=over 4

=item C<RAKUDO_REPOSITORY>, C<PARROT_REPOSITORY>

The directory with a master clone of Rakudo and Parrot respectively.

=item C<TEST_JOBS>

The number of tests to run in parallel.  Default is 6.

=item C<MAKE_JOBS>

The number of parallel make jobs to use.  Default is 6.

=item C<HARNESS_VERBOSE>

The test harness verbosity.  Default value is -2 (only displays the
final summary).  Set this to -3 for a completely silent test harness (bar any
errors), or to 0 for the normal output.

=item C<SMOLDER_SUBMITTER>

The email address the smoke report should be submitted as.  No default, since
the Parrot test harness can usually make a good guess at a sensible value.

=back

=cut
POD

